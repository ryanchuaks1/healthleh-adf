{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-hleh-dbdf001"
		},
		"CosmosDbNoSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbNoSql1'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-hleh-dbkv001.vault.azure.net/"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "server-hleh-userdata001.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db-hleh-userdata001"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "cooladmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbNoSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/credential1')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/d38f5d31-5c08-4ef3-98db-b75952b40114/resourcegroups/rg-hleh-db001/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mi-hleh-sqladmin001"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"cdbhlehiotcnt001": {
							"type": "string"
						},
						"Properties": {
							"type": "object",
							"properties": {
								"user": {
									"type": "string"
								},
								"location": {
									"type": "string"
								},
								"info": {
									"type": "string"
								}
							}
						},
						"SystemProperties": {
							"type": "object",
							"properties": {
								"iothub-connection-device-id": {
									"type": "string"
								},
								"iothub-connection-auth-method": {
									"type": "string"
								},
								"iothub-connection-auth-generation-id": {
									"type": "string"
								},
								"iothub-enqueuedtime": {
									"type": "string"
								},
								"iothub-message-source": {
									"type": "string"
								}
							}
						},
						"iothub-name": {
							"type": "string"
						},
						"Body": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "cdb-hleh-iotcnt001"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]",
					"credential": {
						"referenceName": "credential1",
						"type": "CredentialReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/credentials/credential1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "sec-hleh-sqlpwd001",
						"secretVersion": "468c0d68207f4e94bd7c5beae12748b3"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PhoneNumber",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Height",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "WeightGoal",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Users"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "phoneNumber",
						"type": "varchar"
					},
					{
						"name": "cumulativeStepsToday",
						"type": "int",
						"precision": 10
					},
					{
						"name": "caloriesBurned",
						"type": "int",
						"precision": 10
					},
					{
						"name": "activityDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "currentLocation",
						"type": "geography"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Activities"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "phoneNumber",
						"type": "varchar"
					},
					{
						"name": "cumulativeStepsToday",
						"type": "int",
						"precision": 10
					},
					{
						"name": "caloriesBurned",
						"type": "int",
						"precision": 10
					},
					{
						"name": "activityDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "latitude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "longitude",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Activities"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cosmos_sql_flow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference"
							},
							"name": "cosmos"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sql"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "finduser"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          cdbhlehiotcnt001 as string,",
						"          Properties as (user as string, location as string, info as string),",
						"          SystemProperties as ({iothub-connection-device-id} as string, {iothub-connection-auth-method} as string, {iothub-connection-auth-generation-id} as string, {iothub-enqueuedtime} as string, {iothub-message-source} as string),",
						"          {iothub-name} as string,",
						"          Body as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'document') ~> cosmos",
						"source(output(",
						"          PhoneNumber as string,",
						"          FirstName as string,",
						"          LastName as string,",
						"          Height as double,",
						"          Weight as double,",
						"          WeightGoal as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sql",
						"cosmos, sql join(Properties.user == PhoneNumber,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> finduser",
						"select1 derive(cosmos_datetime = toTimestamp(\r",
						"    concat(substring(cosmos_datetime, 0, 23), 'Z'),\r",
						"    \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\"\r",
						"),",
						"          cosmos_long = toFloat(trim(split(cosmos_location, ',')[2])),",
						"          cosmos_lat = toFloat(trim(split(cosmos_location, ',')[1]))) ~> derivedColumn1",
						"finduser select(mapColumn(",
						"          cosmos_phonenumber = Properties.user,",
						"          cosmos_location = Properties.location,",
						"          cosmos_datetime = SystemProperties.{iothub-enqueuedtime},",
						"          sql_phonenumber = PhoneNumber",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as integer,",
						"          phoneNumber as string,",
						"          cumulativeStepsToday as integer,",
						"          caloriesBurned as integer,",
						"          activityDate as timestamp,",
						"          latitude as double,",
						"          longitude as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          phoneNumber = cosmos_phonenumber,",
						"          activityDate = cosmos_datetime,",
						"          latitude = cosmos_lat,",
						"          longitude = cosmos_long",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cosmos_sql_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data_flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "cosmos_sql_flow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"cosmos": {},
									"sql": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-02-24T22:07:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/cosmos_sql_flow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/minute trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "cosmos_sql_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2025-02-25T00:00:00",
						"timeZone": "Singapore Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/cosmos_sql_pipeline')]"
			]
		}
	]
}